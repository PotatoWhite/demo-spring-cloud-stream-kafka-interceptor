buildscript {
    ext {
        springBootVersion = '2.4.3'
        springDependencyManagementVersion = '1.0.11.RELEASE'
    }
}


plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
}


repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


bootJar.enabled(false)

group 'io.crcell.simply.demo'
version '0.0.1-SNAPSHOT'
def easywalkVersion = '0.0.3.RELEASE'

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    ext {
        set('springCloudVersion', "2020.0.1")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }


    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        def gradleFile = new File(projectDir, "build.gradle")
        if (!gradleFile.exists())
            gradleFile.text = ""
    }
}


project(":stream-producer") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
    }
}

project(":stream-consumer") {
    dependencies {
    }
}